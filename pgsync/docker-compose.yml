services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: pgsync
      POSTGRES_PASSWORD: pgsync123
      POSTGRES_DB: pgsync_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql-init.sql:/docker-entrypoint-initdb.d/init.sql
    command: >
      postgres
      -c wal_level=logical
      -c max_replication_slots=10
      -c max_wal_senders=10
      -c track_commit_timestamp=on
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pgsync -d pgsync_db"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - pgsync-network

  # Redis (required by PGSync)
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - pgsync-network

  # Elasticsearch (required by PGSync)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - pgsync-network

  # Kibana (Elasticsearch UI)
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - pgsync-network

  # PGSync
  pgsync:
    image: toluaina1/pgsync:latest
    container_name: pgsync
    environment:
      PG_USER: pgsync
      PG_PASSWORD: pgsync123
      PG_HOST: postgres
      PG_PORT: 5432
      PG_DATABASE: pgsync_db
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      SCHEMA: /config/schema.json
    ports:
      - "8080:8080"
    volumes:
      - ./config:/config
      - ./logs:/var/log/pgsync
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - pgsync-network

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:

networks:
  pgsync-network:
    driver: bridge
